@model IQueryable<FinalMVC6Grid.Models.EmployeeViewModel>
@using System;
@using NonFactors.Mvc.Grid;
@{
    ViewData["Title"] = "Home Page";
}

@{
    List<SelectListItem> selectListItems = new List<SelectListItem>();
    selectListItems = ViewBag.EmployeeStatusList;
}

<link href="~/Content/MvcGrid/mvc-grid.css" rel="stylesheet" />
<br />
<br />
<br />
@(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => model.Name).Titled("Name").Filterable(true).FilteredAs("text");
        columns.Add(model => model.Email).Titled("Email Address").Filterable(true).FilteredAs("text");
        columns.Add(model => model.DateOfBirth).Titled("Date of Birth").Formatted("{0:d}")
        .Filterable(GridFilterType.Double).FilteredAs("date");

    })
    .Empty("No data found")
    .Filterable()
    .Sortable()
    .Pageable()
)

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/MvcGrid/mvc-grid.js"></script>
<script>

    var CustomTextFilter = (function (base) {
        MvcGridExtends(CustomTextFilter, base);

        function CustomTextFilter(column) {
            base.call(this, column);
            if (column.name == 'email') {
                this.methods = ["contains"];
                column.grid.lang.custom = { contains: 'Contains' };
            } if (column.name == "name") {
                this.methods = ["equals", "not-equals"];
                column.grid.lang.custom = { equals: 'Equals', 'not-equals': 'Not equals' };
            }
        }

        return CustomTextFilter;
    })(MvcGridFilter);

    new MvcGrid(document.querySelector('.mvc-grid'), {
        filters: {
            'text': CustomTextFilter,
        }
    });


    var CustomMvcGridDateFilter = (function (base) {
        MvcGridExtends(MvcGridDateFilter, base);
        function MvcGridDateFilter(column) {
            base.call(this, column);
            if (column.name == 'date-of-birth') {
                this.methods = ["later-than-or-equal", "earlier-than-or-equal"];
                column.grid.lang.custom = { 'later-than-or-equal': 'From', 'earlier-than-or-equal': 'To' };
            }
        }
        return MvcGridDateFilter;
    })(MvcGridFilter);

    new MvcGrid(document.querySelector('.mvc-grid'), {
        filters: {
            'date': CustomMvcGridDateFilter,
        }
    });



</script>